name: "Run Tests"
on:
  workflow_dispatch:
  push:
    branches:
      - main
  pull_request:
  merge_group:

permissions:
  contents: read
  pull-requests: read
jobs:
  pytest-matrix:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.11", "3.12", "3.13"]
    steps:
      - uses: actions/checkout@v4

      - name: Install the latest version of uv
        uses: astral-sh/setup-uv@v1
        with:
          version: "latest"
          enable-cache: true
          cache-dependency-glob: "uv.lock"

      - name: Install Python ${{ matrix.python-version }}
        run: uv python install ${{ matrix.python-version }}

      - name: Install Qemu
        run: |
          echo <<EOF | sudo tee /etc/udev/rules.d/99-kvm.rules
          KERNEL=="kvm", GROUP="kvm", MODE="0666"
          KERNEL=="vhost-vsock", GROUP="kvm", MODE="0666"
          KERNEL=="vhost-net", GROUP="kvm", MODE="0666"
          EOF

          sudo udevadm control --reload-rules

          sudo modprobe vhost_vsock
          sudo modprobe vhost_net
          sudo chmod 0666 /dev/kvm /dev/vhost-vsock /dev/vhost-net

          sudo apt-get update
          sudo apt-get install -y qemu-system-arm qemu-system-x86

      - name: Cache Fedora Cloud images
        id: cache-fedora-cloud-images
        uses: actions/cache@v4
        with:
          path: packages/jumpstarter-driver-qemu/images
          key: fedora-cloud-41-1.4

      - name: Download Fedora Cloud images
        if: steps.cache-fedora-cloud-images.outputs.cache-hit != 'true'
        run: |
            curl -L --output "packages/jumpstarter-driver-qemu/images/Fedora-Cloud-Base-Generic-41-1.4.$(arch).qcow2" \
              "https://download.fedoraproject.org/pub/fedora/linux/releases/41/Cloud/$(arch)/images/Fedora-Cloud-Base-Generic-41-1.4.$(arch).qcow2"

      - name: Run pytest
        run: |
            export UV_PYTHON=${{ matrix.python-version }}
            make test


  # https://github.com/orgs/community/discussions/26822
  pytest:
    runs-on: ubuntu-latest
    needs: [pytest-matrix]
    if: ${{ always() }}
    steps:
      - run: exit 1
        if: >-
          ${{
               contains(needs.*.result, 'failure')
            || contains(needs.*.result, 'cancelled')
            || contains(needs.*.result, 'skipped')
          }}
